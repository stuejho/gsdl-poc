name: Test

on:
  push:
    branches:
      - main
  pull_request:

# Sets permissions of the GITHUB_TOKEN
permissions:
  checks: write
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BRANCH_NAME: ${{ github.head_ref }}

jobs:
  test:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install

      - name: Run tests
        run: poetry run pytest --junitxml=pytest-junit.xml --cov=gsdl --cov-report=xml --cov-report=html

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success()
        with:
          job_name: test
          check_name: junit-test-report
          report_paths: pytest-junit.xml

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'

      # Move coverage to artifact/${{ env.BRANCH_NAME }} so it is accessible
      # at /gsdl/${{ env.BRANCH_NAME }}/coverage
      - name: Move coverage to directory for artifact upload
        run: |
          mkdir -p artifact/${{ env.BRANCH_NAME }}
          mv htmlcov artifact/${{ env.BRANCH_NAME }}/coverage
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: artifact
          retention-days: 3
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
